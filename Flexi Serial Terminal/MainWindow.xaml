<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Flexi_Serial_Terminal"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        DataContext="{Binding RelativeSource={RelativeSource Self}}"
        Background="{DynamicResource MaterialDesignPaper}" FontFamily="{materialDesign:MaterialDesignFont}"
        TextElement.FontSize="14px" x:Class="Flexi_Serial_Terminal.MainWindow" mc:Ignorable="d"
        Closing="MainWindow_OnClosing"
        Title="Flexi Serial Terminal" Height="760" Width="800" MinWidth="700" MinHeight="740">
	<Window.Resources>
		<local:MainWindowBindingProxy x:Key="MainWindowBindingProxy" Data="{Binding}" />
		<Style TargetType="DataGridColumnHeader" x:Key="DataGridHeaderLeft" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
			<Setter Property="HorizontalContentAlignment" Value="Left" />
		</Style>
		<Style TargetType="DataGridColumnHeader" x:Key="DataGridHeaderCentered" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
			<Setter Property="HorizontalContentAlignment" Value="Center" />
		</Style>
	</Window.Resources>
	<Window.CommandBindings>
		<CommandBinding Command="local:CustomCommands.Exit" CanExecute="CanAlwaysExecute" Executed="Exit_OnExecuted" />
		<CommandBinding Command="local:CustomCommands.About" CanExecute="CanAlwaysExecute" Executed="About_OnExecuted" />
		<CommandBinding Command="local:CustomCommands.Connect" CanExecute="Connect_OnCanExecute"
		                Executed="Connect_OnExecuted" />
		<CommandBinding Command="local:CustomCommands.Disconnect" CanExecute="Disconnect_OnCanExecute"
		                Executed="Disconnect_OnExecuted" />
		<CommandBinding Command="local:CustomCommands.ComConnOptions" CanExecute="CanAlwaysExecute"
		                Executed="ComCommOptions_OnExecuted" />
	</Window.CommandBindings>
	<materialDesign:DialogHost x:Name="DialogHost" Identifier="DialogHost" DialogTheme="Light">
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition />
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>
			<Menu VerticalAlignment="Top" FontSize="18">
				<MenuItem Header="_File" Height="Auto" Padding="10,5">
					<MenuItem Command="local:CustomCommands.ComConnOptions" Header="COM Connection _Settings" Height="Auto"
					          Padding="10,5" />
					<Separator />
					<MenuItem Command="local:CustomCommands.Connect" Header="_Connect COM Port" Height="Auto" Padding="10,5" />
					<MenuItem Command="local:CustomCommands.Disconnect" Header="_Disconnect COM Port" Height="Auto" Padding="10,5" />
					<Separator />
					<MenuItem Command="local:CustomCommands.Exit" Header="E_xit" Height="Auto" Padding="10,5" />
				</MenuItem>
				<MenuItem Header="_Help" Height="Auto" Padding="10,5">
					<MenuItem Command="local:CustomCommands.About" Header="_About" Height="Auto" Padding="10,5" />
				</MenuItem>
			</Menu>
			<StackPanel Orientation="Vertical" Grid.Row="1" MaxWidth="980">
				<TextBlock Text="Poll commands &amp; values" HorizontalAlignment="Left" Margin="10,10,10,0"
				           VerticalAlignment="Top"
				           FontSize="20" FontWeight="Bold" />
				<materialDesign:Card Background="{DynamicResource SecondaryHueLightBrush}"
				                     Foreground="{DynamicResource SecondaryHueLightForegroundBrush}" Margin="10,5">
					<Grid>
						<DataGrid
							ItemsSource="{Binding PollDataCollection}"
							VirtualizingPanel.ScrollUnit="Pixel"
							CanUserAddRows="False"
							CanUserDeleteRows="True"
							CanUserReorderColumns="True"
							CanUserResizeRows="True"
							CanUserResizeColumns="True"
							CanUserSortColumns="True"
							AutoGenerateColumns="False"
							BorderThickness="0"
							materialDesign:DataGridAssist.CellPadding="4"
							materialDesign:DataGridAssist.ColumnHeaderPadding="4"
							HeadersVisibility="Column" Foreground="Black" Background="{x:Null}"
							ColumnHeaderStyle="{StaticResource DataGridHeaderCentered}"
							VerticalScrollBarVisibility="Visible" BorderBrush="{x:Null}" Height="215">
							<DataGrid.Columns>
								<DataGridCheckBoxColumn
									CanUserReorder="False"
									CanUserSort="False"
									CanUserResize="False"
									Binding="{Binding IsPolling, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
									ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}"
									EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}">
									<DataGridCheckBoxColumn.Header>
										<Border
											Background="Transparent"
											Padding="6 0 6 0"
											HorizontalAlignment="Center">
											<CheckBox
												ToolTip="Is enabled?"
												HorizontalAlignment="Center"
												VerticalAlignment="Center"
												IsChecked="{Binding Data.AreAllPolling, Source={StaticResource MainWindowBindingProxy}, Mode=TwoWay}" />
										</Border>
									</DataGridCheckBoxColumn.Header>
								</DataGridCheckBoxColumn>
								<DataGridTextColumn
									Header="Name"
									Binding="{Binding Path=Name, Mode=TwoWay}">
									<DataGridTextColumn.ElementStyle>
										<Style TargetType="TextBlock" BasedOn="{StaticResource MaterialDesignDataGridTextColumnStyle}">
											<Setter Property="HorizontalAlignment" Value="Center" />
											<Setter Property="VerticalAlignment" Value="Center" />
										</Style>
									</DataGridTextColumn.ElementStyle>
									<DataGridTextColumn.EditingElementStyle>
										<Style TargetType="TextBox" BasedOn="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}">
											<Setter Property="HorizontalAlignment" Value="Center" />
											<Setter Property="VerticalAlignment" Value="Center" />
										</Style>
									</DataGridTextColumn.EditingElementStyle>
								</DataGridTextColumn>
								<DataGridTextColumn
									Header="Command"
									Binding="{Binding Path=PollCommand, Mode=TwoWay}">
									<DataGridTextColumn.ElementStyle>
										<Style TargetType="TextBlock" BasedOn="{StaticResource MaterialDesignDataGridTextColumnStyle}">
											<Setter Property="HorizontalAlignment" Value="Center" />
											<Setter Property="VerticalAlignment" Value="Center" />
										</Style>
									</DataGridTextColumn.ElementStyle>
									<DataGridTextColumn.EditingElementStyle>
										<Style TargetType="TextBox" BasedOn="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}">
											<Setter Property="HorizontalAlignment" Value="Center" />
											<Setter Property="VerticalAlignment" Value="Center" />
										</Style>
									</DataGridTextColumn.EditingElementStyle>
								</DataGridTextColumn>
								<DataGridTextColumn
									IsReadOnly="True"
									Header="Response"
									Binding="{Binding Path=Value, Mode=OneWay}">
									<DataGridTextColumn.ElementStyle>
										<Style TargetType="TextBlock" BasedOn="{StaticResource MaterialDesignDataGridTextColumnStyle}">
											<Setter Property="HorizontalAlignment" Value="Center" />
											<Setter Property="VerticalAlignment" Value="Center" />
										</Style>
									</DataGridTextColumn.ElementStyle>
								</DataGridTextColumn>
								<DataGridTemplateColumn
									MinWidth="125"
									HeaderStyle="{StaticResource DataGridHeaderLeft}"
									IsReadOnly="True"
									Header="Save file">
									<DataGridTemplateColumn.CellTemplate>
										<DataTemplate>
											<StackPanel Orientation="Horizontal">
												<Button Content="Browse file" HorizontalAlignment="Right" VerticalAlignment="Center" Height="Auto"
												        Command="{Binding Path=(local:PollData.ChooseSaveFileCommand)}" Margin="5,0,0,0" />
												<TextBlock Text="{Binding Path=(local:PollData.SaveFilePath)}" VerticalAlignment="Center" />
											</StackPanel>
										</DataTemplate>
									</DataGridTemplateColumn.CellTemplate>
								</DataGridTemplateColumn>
							</DataGrid.Columns>
						</DataGrid>
						<Button
							Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}"
							ToolTip="Add Row" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="10"
							Content="{materialDesign:PackIcon Kind=Plus, Size=24}"
							Click="AddPollDataRow_OnClick" />
					</Grid>
				</materialDesign:Card>
				<materialDesign:Card Background="{DynamicResource SecondaryHueLightBrush}"
				                     Foreground="{DynamicResource SecondaryHueLightForegroundBrush}" Margin="10,5,10,10"
				                     HorizontalAlignment="Left">
					<Grid Margin="5">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" /> <ColumnDefinition />
						</Grid.ColumnDefinitions>
						<TextBlock HorizontalAlignment="Right" Margin="5" TextWrapping="Wrap" VerticalAlignment="Center"
						           FontWeight="Medium" Text="Interval (ms) between two consecutive polls:" />
						<local:NumericSpinner Grid.Column="1" HorizontalAlignment="Left" Margin="5"
						                      VerticalAlignment="Center"
						                      Value="{Binding Data.IndividualPollInterval, Mode=TwoWay, Source={StaticResource MainWindowBindingProxy}}"
						                      MinValue="0" MaxValue="5000"
						                      MinWidth="75" />
					</Grid>
				</materialDesign:Card>
			</StackPanel>
			<StackPanel Grid.Row="2" VerticalAlignment="Center" MaxWidth="980">
				<TextBlock TextWrapping="Wrap" Text="Send commands" Padding="0" FontSize="20" FontWeight="Bold"
				           HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,10,10,0" />
				<materialDesign:Card Background="{DynamicResource SecondaryHueLightBrush}"
				                     Foreground="{DynamicResource SecondaryHueLightForegroundBrush}" Margin="10,5">
					<Grid>
						<ScrollViewer CanContentScroll="True" Height="250">
							<WrapPanel x:Name="ComCommandsPanel" Margin="0" ScrollViewer.VerticalScrollBarVisibility="Disabled" />
						</ScrollViewer>
						<Button
							Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}"
							ToolTip="Add Command" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="10"
							Content="{materialDesign:PackIcon Kind=Plus, Size=24}"
							Click="AddComCommandBtn_Click" />
					</Grid>
				</materialDesign:Card>
			</StackPanel>
			<Button Grid.Row="3" x:Name="TogglePollingBtn" Content="Start polling" Margin="10" Height="Auto"
			        HorizontalAlignment="Right" VerticalAlignment="Bottom" FontSize="18" Click="TogglePollingBtn_OnClick" />
		</Grid>
	</materialDesign:DialogHost>
</Window>